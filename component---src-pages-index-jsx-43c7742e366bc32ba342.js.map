{"version":3,"sources":["webpack:///./src/components/SEO/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostCategories/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["SEO","render","title","description","image","postURL","this","props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","urljoin","config","siteUrl","pathPrefix","siteTitle","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","Component","Index","data","className","rel","href","postEdges","allMarkdownRemark","edges","pageQuery","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","str","join","parts","split","arguments","slice","call","module","exports","definition","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","_MediaOverlay3","obj","default","PostCategories","categories","map","category","key","style","textDecoration","to","label","PostPreview","state","mobile","handleResize","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","path","raise","height","paddingBottom","PostCover","coverClassName","raised","secondary","expander","avatar","icon","iconClassName","moment","date","format","dateFormat","subtitle","timeToRead","expandable","PostTags","tags","PostListing","postList","forEach","postEdge","node","fields","slug","getPostList","post"],"mappings":"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","file":"component---src-pages-index-jsx-43c7742e366bc32ba342.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push([\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      ]);\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../layout';\r\nimport PostListing from '../components/PostListing';\r\nimport SEO from '../components/SEO';\r\nimport config from '../../data/SiteConfig';\r\n\r\nconst Index = ({ data }) => (\r\n  <Layout title=\"Blogi\">\r\n    <div className=\"index-container\">\r\n      <Helmet>\r\n        <title>{config.siteTitle}</title>\r\n        <link rel=\"canonical\" href={`${config.siteUrl}`} />\r\n      </Helmet>\r\n      <SEO postEdges={data.allMarkdownRemark.edges} />\r\n      <PostListing postEdges={data.allMarkdownRemark.edges} />\r\n    </div>\r\n  </Layout>\r\n);\r\n\r\nexport default Index;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date(formatString: \"YYYY-MM-DD\")\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n            categories\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport Chip from \"react-md/lib/Chips\";\r\nimport \"./PostCategories.scss\";\r\n\r\nclass PostCategories extends Component {\r\n  render() {\r\n    const { categories } = this.props;\r\n    return (\r\n      <div className=\"post-category-container\">\r\n        {categories &&\r\n          categories.map(category => (\r\n            <Link\r\n              key={category}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/categories/${_.kebabCase(category)}`}\r\n            >\r\n              <Chip label={category} className=\"post-preview-categories\" />\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostCategories;\r\n","import React, { Component } from 'react';\r\nimport Card from 'react-md/lib/Cards/Card';\r\nimport CardTitle from 'react-md/lib/Cards/CardTitle';\r\nimport Button from 'react-md/lib/Buttons';\r\nimport Avatar from 'react-md/lib/Avatars';\r\nimport CardText from 'react-md/lib/Cards/CardText';\r\nimport FontIcon from 'react-md/lib/FontIcons';\r\nimport { Link } from 'gatsby';\r\nimport moment from 'moment';\r\nimport Media, { MediaOverlay } from 'react-md/lib/Media';\r\nimport PostTags from '../PostTags';\r\nimport PostCategories from '../PostCategories';\r\nimport PostCover from '../PostCover';\r\nimport config from '../../../data/SiteConfig';\r\nimport './PostPreview.scss';\r\n\r\nclass PostPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobile: true,\r\n    };\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  handleResize() {\r\n    if (window.innerWidth >= 640) {\r\n      this.setState({ mobile: false });\r\n    } else {\r\n      this.setState({ mobile: true });\r\n    }\r\n  }\r\n  render() {\r\n    const { postInfo } = this.props;\r\n    const { mobile } = this.state;\r\n    const expand = mobile;\r\n    /* eslint no-undef: \"off\" */\r\n    const coverHeight = mobile ? 162 : 225;\r\n    return (\r\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\r\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\r\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\r\n            <PostCover\r\n              postNode={postInfo}\r\n              coverHeight={coverHeight}\r\n              coverClassName=\"post-cover\"\r\n            />\r\n            <MediaOverlay>\r\n              <CardTitle title={postInfo.title} className=\"post-preview-title\">\r\n                <Button raised secondary className=\"md-cell--right\">\r\n                  Read\r\n                </Button>\r\n              </CardTitle>\r\n            </MediaOverlay>\r\n          </Media>\r\n        </Link>\r\n        <CardTitle\r\n          expander={expand}\r\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\r\n          title={`Julkaistu ${moment(postInfo.date).format(config.dateFormat)}`}\r\n          subtitle={`${postInfo.timeToRead} min lukemista`}\r\n        />\r\n\r\n        <CardText expandable={expand}>\r\n          {postInfo.excerpt}\r\n          <div className=\"post-binning-container\">\r\n            <PostCategories categories={postInfo.categories} />\r\n            <PostTags tags={postInfo.tags} />\r\n          </div>\r\n        </CardText>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPreview;\r\n","import React from 'react';\r\nimport PostPreview from '../PostPreview';\r\n\r\nconst PostListing = ({ postEdges }) => {\r\n  const getPostList = () => {\r\n    const postList = [];\r\n    postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        categories: postEdge.node.frontmatter.categories,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead,\r\n      });\r\n    });\r\n    return postList;\r\n  };\r\n\r\n  const postList = getPostList();\r\n  return (\r\n    <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\r\n      <div className=\"md-grid md-cell--8 mobile-fix\">\r\n        {postList.map(post => (\r\n          <PostPreview key={post.title} postInfo={post} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}